var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.243,1,1.771]],["body/controllers/AppController.html",[0,1.864,1,2.655,2,1.438,3,0.426,4,0.36,5,0.36,6,2.75,7,0.571,8,1.498,9,4.184,10,1.609,11,0.042,12,0.828,13,3.36,14,1.155,15,1.498,16,0.552,17,1.036,18,2.314,19,2.75,20,0.426,21,0.104,22,2.048,23,2.75,24,1.808,25,3.36,26,0.031,27,0.031]],["title/modules/AppModule.html",[28,1.391,29,1.771]],["body/modules/AppModule.html",[1,2.625,2,1.6,3,0.339,4,0.287,5,0.287,11,0.042,16,0.661,17,0.826,18,2.432,19,2.191,20,0.339,21,0.083,26,0.027,27,0.027,28,1.79,29,3.241,30,1.282,31,1.79,32,2.191,33,2.191,34,2.191,35,2.733,36,2.278,37,1.632,38,1.632,39,1.871,40,2.612,41,3.059,42,2.677,43,2.191,44,2.191,45,1.871,46,2.677,47,2.677,48,3.257,49,2.677,50,1.871,51,2.677,52,2.677,53,2.677]],["title/injectables/AppService.html",[18,1.391,54,1.243]],["body/injectables/AppService.html",[3,0.454,4,0.383,5,0.383,7,0.609,8,1.561,9,4.286,11,0.041,12,0.883,14,1.232,15,1.561,16,0.454,17,1.105,18,2.173,20,0.454,21,0.111,24,1.928,26,0.033,27,0.033,54,1.942,55,2.184,56,2.932,57,3.583,58,3.583,59,3.583]],["title/controllers/AuthController.html",[0,1.243,60,1.771]],["body/controllers/AuthController.html",[0,1.57,2,1.116,3,0.33,4,0.279,5,0.279,7,0.443,8,1.262,10,1.757,11,0.042,12,0.904,14,1.262,16,0.584,17,0.804,20,0.33,21,0.081,22,1.589,24,1.403,26,0.026,27,0.026,60,2.236,61,2.134,62,3.669,63,3.003,64,2.607,65,3.07,66,3.669,67,2.607,68,1.757,69,1.407,70,0.904,71,1.757,72,2.134,73,2.134,74,2.71,75,3.669,76,2.607,77,2.607,78,2.607,79,2.032,80,2.134,81,2.607,82,2.134,83,2.607,84,2.607,85,2.607,86,2.607,87,2.607,88,2.607,89,2.607]],["title/modules/AuthModule.html",[28,1.391,35,1.563]],["body/modules/AuthModule.html",[2,1.754,3,0.389,4,0.328,5,0.328,11,0.042,16,0.652,17,0.945,20,0.389,21,0.095,26,0.029,27,0.029,28,1.963,30,1.467,31,1.963,35,2.847,36,2.499,37,1.868,38,1.868,40,2.865,41,2.508,44,2.508,45,2.142,60,2.816,79,2.533,80,2.508,90,2.508,91,2.508,92,3.065,93,3.065,94,1.467,95,3.065,96,3.065]],["title/injectables/AuthService.html",[54,1.243,79,1.391]],["body/injectables/AuthService.html",[3,0.371,4,0.313,5,0.313,7,0.498,8,1.367,11,0.042,12,0.98,14,1.007,16,0.614,17,0.903,20,0.371,21,0.091,22,1.785,26,0.029,27,0.029,54,1.701,55,1.785,63,3.254,68,1.904,69,1.525,70,0.98,71,1.904,72,2.397,73,3.254,74,2.724,79,1.904,82,2.397,94,2.5,97,2.397,98,2.397,99,2.397,100,2.929,101,2.929,102,1.253,103,1.785,104,2.397,105,2.929]],["title/classes/BaseEntity.html",[21,0.09,106,1.771]],["body/classes/BaseEntity.html",[3,0.265,4,0.224,5,0.224,7,0.355,10,2.234,11,0.042,12,1.15,15,1.71,16,0.265,20,0.265,21,0.065,26,0.022,27,0.022,70,1.294,106,1.906,107,0.72,108,1.712,109,1.338,110,2.617,111,2.617,112,2.617,113,2.617,114,2.617,115,2.617,116,3.401,117,1.712,118,3.401,119,1.99,120,2.56,121,2.092,122,3.065,123,3.819,124,3.819,125,3.819,126,2.092,127,2.56,128,2.092,129,1.683,130,2.56,131,2.185,132,2.092,133,1.712,134,2.092,135,2.092,136,2.533,137,3.127,138,2.092,139,3.127,140,0.895,141,2.092,142,3.127]],["title/classes/LoginDto.html",[21,0.09,65,1.771]],["body/classes/LoginDto.html",[3,0.381,4,0.321,5,0.321,7,0.51,10,1.936,11,0.041,12,0.996,15,1.682,16,0.381,20,0.381,21,0.125,26,0.029,27,0.029,65,2.465,70,0.996,107,1.033,109,1.73,143,2.457,144,2.787,145,2.748,146,2.457,147,3.003,148,2.457,149,3.309,150,3.309,151,3.309,152,3.309,153,3.003,154,3.309,155,3.309,156,2.457,157,2.457,158,2.457,159,3.309,160,2.098,161,2.457,162,2.457,163,2.457]],["title/classes/SignupDto.html",[21,0.09,74,1.563]],["body/classes/SignupDto.html",[3,0.3,4,0.253,5,0.253,7,0.402,8,1.178,10,1.927,11,0.042,12,1.086,14,0.814,15,1.677,16,0.434,20,0.3,21,0.106,23,2.803,24,1.274,26,0.025,27,0.025,50,1.655,69,1.543,70,0.991,74,1.843,102,1.466,103,1.443,107,0.814,109,1.466,144,2.453,145,2.518,146,1.938,148,1.938,149,2.803,150,2.803,151,2.803,152,2.803,154,2.803,155,3.609,156,1.938,157,1.938,158,1.938,159,2.803,160,1.655,161,1.938,162,1.938,163,1.938,164,1.938,165,2.088,166,2.453,167,4.41,168,2.368,169,2.368,170,2.368,171,2.368,172,1.64,173,1.938,174,2.368,175,2.368,176,2.368,177,2.368,178,2.368,179,2.368]],["title/controllers/UsersController.html",[0,1.243,180,1.771]],["body/controllers/UsersController.html",[0,2.094,2,1.732,3,0.513,4,0.433,5,0.433,11,0.04,16,0.513,17,1.248,20,0.513,21,0.125,26,0.035,27,0.035,180,2.983,181,3.312]],["title/classes/UsersEntity.html",[21,0.09,102,1.243]],["body/classes/UsersEntity.html",[3,0.24,4,0.203,5,0.203,7,0.321,10,2.366,11,0.041,12,1.218,15,1.735,16,0.367,20,0.24,21,0.059,26,0.021,27,0.021,69,1.514,70,1.282,102,1.24,106,3.012,107,0.651,109,1.24,110,2.025,111,2.025,112,2.025,113,2.025,114,2.025,115,2.025,116,2.372,117,1.549,118,2.372,119,1.388,120,2.372,122,3.675,123,4.045,124,3.825,125,3.483,127,1.549,129,1.018,130,1.549,131,1.322,133,1.549,136,2.406,140,0.81,144,2.147,145,1.896,172,0.906,182,1.549,183,2.372,184,2.898,185,1.892,186,1.892,187,1.892,188,4.49,189,1.892,190,1.892,191,1.892,192,1.892,193,1.892,194,1.892,195,2.898,196,1.892]],["title/modules/UsersModule.html",[28,1.391,197,1.771]],["body/modules/UsersModule.html",[2,1.83,3,0.414,4,0.35,5,0.35,11,0.041,16,0.604,17,1.007,20,0.414,21,0.101,26,0.031,27,0.031,28,2.048,30,1.564,31,2.048,36,2.607,37,1.991,38,1.991,40,2.989,180,2.906,197,3.283,198,2.674,199,2.674,200,2.899,201,3.267,202,3.267,203,3.267]],["title/classes/UsersRepository.html",[21,0.09,94,1.391]],["body/classes/UsersRepository.html",[3,0.48,4,0.405,5,0.405,11,0.041,16,0.596,20,0.48,21,0.117,26,0.034,27,0.034,94,2.25,102,1.621,103,2.309,107,1.303,140,1.621,183,3.847,204,3.101,205,4.182,206,3.789,207,3.789]],["title/injectables/UsersService.html",[54,1.243,200,1.563]],["body/injectables/UsersService.html",[3,0.377,4,0.318,5,0.318,7,0.505,8,1.381,11,0.042,12,0.989,14,1.022,16,0.577,17,0.917,20,0.377,21,0.092,22,1.812,26,0.029,27,0.029,54,1.719,55,1.812,68,1.923,69,1.54,70,0.989,71,1.923,94,2.511,98,2.433,99,2.433,102,2.085,103,1.812,104,2.433,172,1.423,200,2.161,208,2.433,209,2.772,210,3.287,211,2.973,212,4.016,213,2.973,214,2.973]],["title/coverage.html",[215,2.763]],["body/coverage.html",[0,1.699,1,1.409,5,0.247,6,1.892,11,0.041,18,1.107,21,0.158,26,0.024,27,0.024,39,1.616,48,2.353,54,1.699,56,1.892,60,1.409,61,1.892,65,1.409,70,0.57,74,1.244,79,1.107,94,1.107,97,1.892,102,0.99,106,1.409,108,1.892,143,1.892,164,1.892,173,1.892,180,1.409,181,1.892,182,1.892,200,1.244,204,1.892,208,1.892,215,1.616,216,2.312,217,2.312,218,2.312,219,5.688,220,3.367,221,4.361,222,4.993,223,3.25,224,1.892,225,1.892,226,1.892,227,2.312,228,1.892,229,1.892,230,2.353,231,1.616,232,3.97,233,1.892,234,1.892,235,1.616,236,1.892,237,1.616,238,2.312,239,2.312,240,4.361,241,2.312,242,2.312,243,1.409]],["title/dependencies.html",[31,1.671,244,2.431]],["body/dependencies.html",[11,0.042,17,1.019,21,0.133,26,0.031,27,0.031,31,1.582,43,2.704,45,2.309,140,1.414,160,2.309,245,4.794,246,3.303,247,3.303,248,3.303,249,4.308,250,3.303,251,3.303,252,3.303,253,3.303,254,3.303,255,3.303,256,3.303,257,3.303,258,3.303,259,3.303,260,3.303,261,3.303,262,3.303,263,3.303,264,3.303,265,3.303,266,3.303,267,3.303,268,3.303]],["title/miscellaneous/functions.html",[269,1.482,270,2.857]],["body/miscellaneous/functions.html",[7,0.727,11,0.036,26,0.036,27,0.036,226,3.503,228,4.41,269,2.609,270,3.503,271,4.28]],["title/index.html",[7,0.413,272,2.431,273,2.431]],["body/index.html",[4,0.285,11,0.041,26,0.027,27,0.027,205,2.181,215,1.863,274,2.665,275,2.665,276,3.726,277,2.665,278,2.665,279,2.665,280,2.665,281,2.665,282,2.665,283,2.665,284,4.296,285,2.665,286,2.665,287,2.665,288,5.206,289,2.665,290,2.665,291,2.181,292,5.072,293,2.665,294,2.665,295,3.726,296,2.665,297,2.181,298,2.665,299,2.665,300,3.726,301,3.05,302,2.665,303,2.665,304,2.665,305,3.726,306,3.726,307,2.665,308,2.665,309,2.665,310,2.665,311,2.665,312,2.181,313,2.665,314,2.665,315,2.665,316,2.665,317,2.665,318,2.665,319,2.665,320,2.665,321,2.665,322,2.665,323,2.665,324,2.665,325,2.665,326,2.665,327,2.665,328,2.665,329,2.665,330,2.665]],["title/modules.html",[30,1.893]],["body/modules.html",[11,0.035,26,0.035,27,0.035,29,2.467,30,1.938,35,2.178,197,2.467,312,4.306,331,5.261,332,5.261,333,5.261]],["title/overview.html",[334,3.236]],["body/overview.html",[2,1.406,11,0.039,18,2.289,26,0.031,27,0.031,29,3.288,30,1.573,31,2.055,32,2.689,33,2.689,34,2.689,35,2.831,36,2.616,37,2.002,38,2.002,55,2.002,79,2.289,90,2.689,91,2.689,107,1.13,197,3.09,198,2.689,199,2.689,200,2.573,334,2.689,335,4.781,336,3.285]],["title/classes/user1635180905186.html",[21,0.09,235,2.03]],["body/classes/user1635180905186.html",[3,0.305,4,0.258,5,0.258,7,0.409,8,1.192,11,0.041,12,1.001,14,1.192,15,0.828,16,0.305,20,0.305,21,0.074,26,0.025,27,0.025,68,1.659,69,1.806,70,1.001,71,1.659,107,0.828,109,1.483,119,1.152,129,1.295,136,1.467,140,1.03,165,2.112,166,2.989,172,1.659,209,2.989,233,3.636,234,1.969,235,3.105,243,2.112,337,2.838,338,2.422,339,2.422,340,1.467,341,2.406,342,2.422,343,3.682,344,2.406,345,3.105,346,2.422,347,2.406,348,2.422,349,1.681,350,1.969,351,1.969,352,2.422,353,1.681,354,1.681,355,1.969,356,1.969]],["title/classes/users1635180753080.html",[21,0.09,231,2.03]],["body/classes/users1635180753080.html",[3,0.263,4,0.222,5,0.222,7,0.353,8,1.07,11,0.04,12,0.919,14,1.07,15,0.715,16,0.263,20,0.263,21,0.064,26,0.022,27,0.022,68,1.49,69,1.785,70,0.919,71,1.49,107,0.715,109,1.331,110,1.452,111,1.452,112,2.174,113,1.452,114,1.452,115,1.452,119,1.983,129,2.67,140,0.889,144,1.266,145,1.118,165,1.896,166,2.837,172,1.49,209,2.837,210,1.7,229,3.389,230,1.452,231,2.894,243,1.896,337,2.606,338,2.174,339,2.174,340,1.266,342,2.174,343,3.546,345,2.894,346,2.174,348,2.174,349,1.452,353,3.253,354,1.452,357,1.7,358,2.078,359,1.7,360,2.078,361,2.078,362,3.111,363,3.111,364,3.111,365,3.111,366,4.141,367,2.078,368,2.078,369,2.078,370,2.078,371,1.7,372,2.078]],["title/classes/users1635181137582.html",[21,0.09,237,2.03]],["body/classes/users1635181137582.html",[3,0.305,4,0.258,5,0.258,7,0.409,8,1.192,11,0.041,12,1.001,14,1.192,15,0.828,16,0.305,20,0.305,21,0.074,26,0.025,27,0.025,68,1.659,69,1.806,70,1.001,71,1.659,107,0.828,109,1.483,119,1.152,129,1.295,136,1.467,140,1.03,165,2.112,166,2.989,172,1.659,209,2.989,230,1.681,236,3.636,237,3.105,243,2.112,337,2.838,338,2.422,339,2.422,340,1.467,342,2.422,343,3.682,345,3.105,346,2.422,348,2.422,349,1.681,350,1.969,351,1.969,352,2.422,353,1.681,354,1.681,355,1.969,356,1.969,357,1.969,359,1.969,373,2.406]],["title/miscellaneous/variables.html",[269,1.482,374,2.857]],["body/miscellaneous/variables.html",[7,0.419,11,0.042,24,2.661,26,0.025,27,0.025,39,1.723,48,3.322,50,1.723,70,0.608,119,2.151,131,2.465,145,1.327,223,2.018,224,2.887,225,2.887,269,1.503,291,2.018,297,2.887,301,2.018,340,2.739,352,1.723,371,2.018,374,2.018,375,2.466,376,4.117,377,2.466,378,2.466,379,2.466,380,2.466,381,2.466,382,2.466,383,2.466,384,2.466,385,2.466,386,2.466,387,3.527,388,2.466,389,2.466,390,2.466,391,2.466,392,2.466,393,2.466,394,2.466,395,2.466,396,2.466,397,2.466,398,2.466,399,2.466,400,2.466,401,3.527,402,2.466,403,2.466,404,4.493,405,2.466,406,2.466,407,2.466,408,2.466,409,2.466,410,2.466]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"classes/LoginDto.html":{},"classes/SignupDto.html":{},"controllers/UsersController.html":{},"classes/UsersEntity.html":{},"modules/UsersModule.html":{},"classes/UsersRepository.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"classes/user1635180905186.html":{},"classes/users1635180753080.html":{},"classes/users1635181137582.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":219,"title":{},"body":{"coverage.html":{}}}],["0.1.13",{"_index":260,"title":{},"body":{"dependencies.html":{}}}],["0.13.1",{"_index":255,"title":{},"body":{"dependencies.html":{}}}],["0.2.38",{"_index":268,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":254,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":222,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":239,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":220,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":240,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":232,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":241,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":238,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{}}}],["1.0.2",{"_index":246,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":184,"title":{},"body":{"classes/UsersEntity.html":{}}}],["3",{"_index":335,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":262,"title":{},"body":{"dependencies.html":{}}}],["300",{"_index":125,"title":{},"body":{"classes/BaseEntity.html":{},"classes/UsersEntity.html":{}}}],["4.1.6",{"_index":267,"title":{},"body":{"dependencies.html":{}}}],["5.1.4",{"_index":251,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":264,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":336,"title":{},"body":{"overview.html":{}}}],["8.0.0",{"_index":245,"title":{},"body":{"dependencies.html":{}}}],["8.0.2",{"_index":252,"title":{},"body":{"dependencies.html":{}}}],["8.7.1",{"_index":257,"title":{},"body":{"dependencies.html":{}}}],["abstract",{"_index":141,"title":{},"body":{"classes/BaseEntity.html":{}}}],["add",{"_index":351,"title":{},"body":{"classes/user1635180905186.html":{},"classes/users1635181137582.html":{}}}],["alter",{"_index":350,"title":{},"body":{"classes/user1635180905186.html":{},"classes/users1635181137582.html":{}}}],["amazing",{"_index":313,"title":{},"body":{"index.html":{}}}],["app",{"_index":290,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":282,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":209,"title":{},"body":{"injectables/UsersService.html":{},"classes/user1635180905186.html":{},"classes/users1635180753080.html":{},"classes/users1635181137582.html":{}}}],["auth.controller",{"_index":93,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":80,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["authcontroller",{"_index":60,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authmodule",{"_index":35,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":323,"title":{},"body":{"index.html":{}}}],["authservice",{"_index":79,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["autoloadentities",{"_index":388,"title":{},"body":{"miscellaneous/variables.html":{}}}],["await",{"_index":348,"title":{},"body":{"classes/user1635180905186.html":{},"classes/users1635180753080.html":{},"classes/users1635181137582.html":{}}}],["backers",{"_index":314,"title":{},"body":{"index.html":{}}}],["base.entity",{"_index":196,"title":{},"body":{"classes/UsersEntity.html":{}}}],["baseentity",{"_index":106,"title":{"classes/BaseEntity.html":{}},"body":{"classes/BaseEntity.html":{},"classes/UsersEntity.html":{},"coverage.html":{}}}],["baseentity:10",{"_index":191,"title":{},"body":{"classes/UsersEntity.html":{}}}],["baseentity:13",{"_index":189,"title":{},"body":{"classes/UsersEntity.html":{}}}],["baseentity:16",{"_index":190,"title":{},"body":{"classes/UsersEntity.html":{}}}],["baseentity:19",{"_index":193,"title":{},"body":{"classes/UsersEntity.html":{}}}],["baseentity:22",{"_index":194,"title":{},"body":{"classes/UsersEntity.html":{}}}],["baseentity:25",{"_index":192,"title":{},"body":{"classes/UsersEntity.html":{}}}],["body",{"_index":77,"title":{},"body":{"controllers/AuthController.html":{}}}],["bootstrap",{"_index":228,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":333,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":331,"title":{},"body":{"modules.html":{}}}],["building",{"_index":277,"title":{},"body":{"index.html":{}}}],["case",{"_index":404,"title":{},"body":{"miscellaneous/variables.html":{}}}],["character",{"_index":353,"title":{},"body":{"classes/user1635180905186.html":{},"classes/users1635180753080.html":{},"classes/users1635181137582.html":{}}}],["class",{"_index":21,"title":{"classes/BaseEntity.html":{},"classes/LoginDto.html":{},"classes/SignupDto.html":{},"classes/UsersEntity.html":{},"classes/UsersRepository.html":{},"classes/user1635180905186.html":{},"classes/users1635180753080.html":{},"classes/users1635181137582.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"classes/LoginDto.html":{},"classes/SignupDto.html":{},"controllers/UsersController.html":{},"classes/UsersEntity.html":{},"modules/UsersModule.html":{},"classes/UsersRepository.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"classes/user1635180905186.html":{},"classes/users1635180753080.html":{},"classes/users1635181137582.html":{}}}],["classes",{"_index":107,"title":{},"body":{"classes/BaseEntity.html":{},"classes/LoginDto.html":{},"classes/SignupDto.html":{},"classes/UsersEntity.html":{},"classes/UsersRepository.html":{},"overview.html":{},"classes/user1635180905186.html":{},"classes/users1635180753080.html":{},"classes/users1635181137582.html":{}}}],["cli",{"_index":397,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster_appmodule",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":90,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":91,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":198,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":199,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["column",{"_index":136,"title":{},"body":{"classes/BaseEntity.html":{},"classes/UsersEntity.html":{},"classes/user1635180905186.html":{},"classes/users1635181137582.html":{}}}],["column({type",{"_index":122,"title":{},"body":{"classes/BaseEntity.html":{},"classes/UsersEntity.html":{}}}],["config",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["config/configuration",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":42,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log(logindto",{"_index":86,"title":{},"body":{"controllers/AuthController.html":{}}}],["console.log(signupdto",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{}}}],["const",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"classes/SignupDto.html":{},"miscellaneous/variables.html":{}}}],["constraint",{"_index":368,"title":{},"body":{"classes/users1635180753080.html":{}}}],["constructor",{"_index":98,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["constructor(usersrepository",{"_index":99,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["coverage",{"_index":215,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":210,"title":{},"body":{"injectables/UsersService.html":{},"classes/users1635180753080.html":{}}}],["create(users",{"_index":212,"title":{},"body":{"injectables/UsersService.html":{}}}],["created_at",{"_index":110,"title":{},"body":{"classes/BaseEntity.html":{},"classes/UsersEntity.html":{},"classes/users1635180753080.html":{}}}],["created_by",{"_index":111,"title":{},"body":{"classes/BaseEntity.html":{},"classes/UsersEntity.html":{},"classes/users1635180753080.html":{}}}],["createdatecolumn",{"_index":137,"title":{},"body":{"classes/BaseEntity.html":{}}}],["createdatecolumn({type",{"_index":117,"title":{},"body":{"classes/BaseEntity.html":{},"classes/UsersEntity.html":{}}}],["current_timestamp",{"_index":142,"title":{},"body":{"classes/BaseEntity.html":{}}}],["database",{"_index":386,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":116,"title":{},"body":{"classes/BaseEntity.html":{},"classes/UsersEntity.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/BaseEntity.html":{},"classes/LoginDto.html":{},"classes/SignupDto.html":{},"classes/UsersEntity.html":{}}}],["default",{"_index":119,"title":{},"body":{"classes/BaseEntity.html":{},"classes/UsersEntity.html":{},"classes/user1635180905186.html":{},"classes/users1635180753080.html":{},"classes/users1635181137582.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"classes/LoginDto.html":{},"classes/SignupDto.html":{},"classes/UsersEntity.html":{},"injectables/UsersService.html":{},"classes/user1635180905186.html":{},"classes/users1635180753080.html":{},"classes/users1635181137582.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":283,"title":{},"body":{"index.html":{}}}],["development",{"_index":291,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["development.env",{"_index":405,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation",{"_index":216,"title":{},"body":{"coverage.html":{}}}],["down",{"_index":338,"title":{},"body":{"classes/user1635180905186.html":{},"classes/users1635180753080.html":{},"classes/users1635181137582.html":{}}}],["down(queryrunner",{"_index":342,"title":{},"body":{"classes/user1635180905186.html":{},"classes/users1635180753080.html":{},"classes/users1635181137582.html":{}}}],["drop",{"_index":356,"title":{},"body":{"classes/user1635180905186.html":{},"classes/users1635181137582.html":{}}}],["dto/login.dto",{"_index":81,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/signup.dto",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["e2e",{"_index":302,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":278,"title":{},"body":{"index.html":{}}}],["email",{"_index":144,"title":{},"body":{"classes/LoginDto.html":{},"classes/SignupDto.html":{},"classes/UsersEntity.html":{},"classes/users1635180753080.html":{}}}],["entities",{"_index":390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entity",{"_index":195,"title":{},"body":{"classes/UsersEntity.html":{}}}],["entity.{ts,js",{"_index":392,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entityrepository",{"_index":206,"title":{},"body":{"classes/UsersRepository.html":{}}}],["entityrepository(usersentity",{"_index":207,"title":{},"body":{"classes/UsersRepository.html":{}}}],["env",{"_index":401,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environment",{"_index":224,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"classes/LoginDto.html":{},"classes/SignupDto.html":{},"controllers/UsersController.html":{},"classes/UsersEntity.html":{},"modules/UsersModule.html":{},"classes/UsersRepository.html":{},"injectables/UsersService.html":{},"classes/user1635180905186.html":{},"classes/users1635180753080.html":{},"classes/users1635181137582.html":{}}}],["express",{"_index":249,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":183,"title":{},"body":{"classes/UsersEntity.html":{},"classes/UsersRepository.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"classes/LoginDto.html":{},"classes/SignupDto.html":{},"controllers/UsersController.html":{},"classes/UsersEntity.html":{},"modules/UsersModule.html":{},"classes/UsersRepository.html":{},"injectables/UsersService.html":{},"coverage.html":{},"classes/user1635180905186.html":{},"classes/users1635180753080.html":{},"classes/users1635181137582.html":{}}}],["framework",{"_index":276,"title":{},"body":{"index.html":{}}}],["function",{"_index":227,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":270,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["getenvvalue",{"_index":225,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getenvvalue('postgres_database",{"_index":387,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getenvvalue('postgres_host",{"_index":381,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getenvvalue('postgres_password",{"_index":385,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getenvvalue('postgres_user",{"_index":384,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":272,"title":{"index.html":{}},"body":{}}],["gettypeormmoduleoptions",{"_index":377,"title":{},"body":{"miscellaneous/variables.html":{}}}],["grow",{"_index":309,"title":{},"body":{"index.html":{}}}],["hello",{"_index":58,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":320,"title":{},"body":{"index.html":{}}}],["host",{"_index":380,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://nestjs.com",{"_index":327,"title":{},"body":{"index.html":{}}}],["id",{"_index":112,"title":{},"body":{"classes/BaseEntity.html":{},"classes/UsersEntity.html":{},"classes/users1635180753080.html":{}}}],["identifier",{"_index":217,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":165,"title":{},"body":{"classes/SignupDto.html":{},"classes/user1635180905186.html":{},"classes/users1635180753080.html":{},"classes/users1635181137582.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"classes/LoginDto.html":{},"classes/SignupDto.html":{},"controllers/UsersController.html":{},"classes/UsersEntity.html":{},"modules/UsersModule.html":{},"classes/UsersRepository.html":{},"injectables/UsersService.html":{},"classes/user1635180905186.html":{},"classes/users1635180753080.html":{},"classes/users1635181137582.html":{}}}],["imports",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"classes/LoginDto.html":{},"classes/SignupDto.html":{},"classes/UsersEntity.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"classes/user1635180905186.html":{},"classes/users1635180753080.html":{},"classes/users1635181137582.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"classes/LoginDto.html":{},"classes/SignupDto.html":{},"controllers/UsersController.html":{},"classes/UsersEntity.html":{},"modules/UsersModule.html":{},"classes/UsersRepository.html":{},"injectables/UsersService.html":{},"classes/user1635180905186.html":{},"classes/users1635180753080.html":{},"classes/users1635181137582.html":{}}}],["inherited",{"_index":188,"title":{},"body":{"classes/UsersEntity.html":{}}}],["injectable",{"_index":54,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":55,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["installation",{"_index":287,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":289,"title":{},"body":{"index.html":{}}}],["internal_comment",{"_index":113,"title":{},"body":{"classes/BaseEntity.html":{},"classes/UsersEntity.html":{},"classes/users1635180753080.html":{}}}],["isemail",{"_index":154,"title":{},"body":{"classes/LoginDto.html":{},"classes/SignupDto.html":{}}}],["isemail()@isnotempty",{"_index":146,"title":{},"body":{"classes/LoginDto.html":{},"classes/SignupDto.html":{}}}],["isnotempty",{"_index":159,"title":{},"body":{"classes/LoginDto.html":{},"classes/SignupDto.html":{}}}],["isstring",{"_index":155,"title":{},"body":{"classes/LoginDto.html":{},"classes/SignupDto.html":{}}}],["isstring()@minlength(4)@maxlength(20)@matches(/((?=.*\\d)|(?=.*\\w+))(?![.\\n])(?=.*[a",{"_index":148,"title":{},"body":{"classes/LoginDto.html":{},"classes/SignupDto.html":{}}}],["join",{"_index":316,"title":{},"body":{"index.html":{}}}],["join(`${__dirname}/../model",{"_index":391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["join(`${__dirname}/src/migration/*.ts",{"_index":396,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kamil",{"_index":324,"title":{},"body":{"index.html":{}}}],["key",{"_index":371,"title":{},"body":{"classes/users1635180753080.html":{},"miscellaneous/variables.html":{}}}],["length",{"_index":124,"title":{},"body":{"classes/BaseEntity.html":{},"classes/UsersEntity.html":{}}}],["license",{"_index":330,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":306,"title":{},"body":{"index.html":{}}}],["load",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["local",{"_index":408,"title":{},"body":{"miscellaneous/variables.html":{}}}],["local.env",{"_index":409,"title":{},"body":{"miscellaneous/variables.html":{}}}],["login",{"_index":62,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(@body",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(logindto",{"_index":64,"title":{},"body":{"controllers/AuthController.html":{}}}],["logindto",{"_index":65,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["matches",{"_index":157,"title":{},"body":{"classes/LoginDto.html":{},"classes/SignupDto.html":{}}}],["matches(/((?=.*\\d)|(?=.*\\w+))(?![.\\n])(?=.*[a",{"_index":163,"title":{},"body":{"classes/LoginDto.html":{},"classes/SignupDto.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"classes/LoginDto.html":{},"classes/SignupDto.html":{},"controllers/UsersController.html":{},"classes/UsersEntity.html":{},"modules/UsersModule.html":{},"classes/UsersRepository.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"classes/user1635180905186.html":{},"classes/users1635180753080.html":{},"classes/users1635181137582.html":{},"miscellaneous/variables.html":{}}}],["maxlength",{"_index":158,"title":{},"body":{"classes/LoginDto.html":{},"classes/SignupDto.html":{}}}],["maxlength(20",{"_index":162,"title":{},"body":{"classes/LoginDto.html":{},"classes/SignupDto.html":{}}}],["message",{"_index":151,"title":{},"body":{"classes/LoginDto.html":{},"classes/SignupDto.html":{}}}],["metadata",{"_index":259,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/SignupDto.html":{},"injectables/UsersService.html":{},"classes/user1635180905186.html":{},"classes/users1635180753080.html":{},"classes/users1635181137582.html":{}}}],["migration",{"_index":394,"title":{},"body":{"miscellaneous/variables.html":{}}}],["migrationinterface",{"_index":337,"title":{},"body":{"classes/user1635180905186.html":{},"classes/users1635180753080.html":{},"classes/users1635181137582.html":{}}}],["migrations",{"_index":395,"title":{},"body":{"miscellaneous/variables.html":{}}}],["migrationsdir",{"_index":398,"title":{},"body":{"miscellaneous/variables.html":{}}}],["migrationstablename",{"_index":393,"title":{},"body":{"miscellaneous/variables.html":{}}}],["minlength",{"_index":156,"title":{},"body":{"classes/LoginDto.html":{},"classes/SignupDto.html":{}}}],["minlength(4",{"_index":161,"title":{},"body":{"classes/LoginDto.html":{},"classes/SignupDto.html":{}}}],["miscellaneous",{"_index":269,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":305,"title":{},"body":{"index.html":{}}}],["mode",{"_index":295,"title":{},"body":{"index.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/auth/auth.module",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":319,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":325,"title":{},"body":{"index.html":{}}}],["name",{"_index":69,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/SignupDto.html":{},"classes/UsersEntity.html":{},"injectables/UsersService.html":{},"classes/user1635180905186.html":{},"classes/users1635180753080.html":{},"classes/users1635181137582.html":{}}}],["nest",{"_index":284,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":329,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":247,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":248,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":250,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"dependencies.html":{}}}],["new",{"_index":173,"title":{},"body":{"classes/SignupDto.html":{},"coverage.html":{}}}],["node.js",{"_index":275,"title":{},"body":{"index.html":{}}}],["now",{"_index":365,"title":{},"body":{"classes/users1635180753080.html":{}}}],["npm",{"_index":288,"title":{},"body":{"index.html":{}}}],["null",{"_index":129,"title":{},"body":{"classes/BaseEntity.html":{},"classes/UsersEntity.html":{},"classes/user1635180905186.html":{},"classes/users1635180753080.html":{},"classes/users1635181137582.html":{}}}],["nullable",{"_index":130,"title":{},"body":{"classes/BaseEntity.html":{},"classes/UsersEntity.html":{}}}],["open",{"_index":307,"title":{},"body":{"index.html":{}}}],["optional",{"_index":71,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{},"classes/user1635180905186.html":{},"classes/users1635180753080.html":{},"classes/users1635181137582.html":{}}}],["out",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":334,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":244,"title":{"dependencies.html":{}},"body":{}}],["parameters",{"_index":68,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{},"classes/user1635180905186.html":{},"classes/users1635180753080.html":{},"classes/users1635181137582.html":{}}}],["parseint(getenvvalue('postgres_port",{"_index":383,"title":{},"body":{"miscellaneous/variables.html":{}}}],["password",{"_index":145,"title":{},"body":{"classes/LoginDto.html":{},"classes/SignupDto.html":{},"classes/UsersEntity.html":{},"classes/users1635180753080.html":{},"miscellaneous/variables.html":{}}}],["pg",{"_index":256,"title":{},"body":{"dependencies.html":{}}}],["pk_a3ffb1c0c8416b9fc6f907b7433",{"_index":369,"title":{},"body":{"classes/users1635180753080.html":{}}}],["please",{"_index":317,"title":{},"body":{"index.html":{}}}],["port",{"_index":382,"title":{},"body":{"miscellaneous/variables.html":{}}}],["post",{"_index":78,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/login",{"_index":66,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/signup",{"_index":75,"title":{},"body":{"controllers/AuthController.html":{}}}],["postgres",{"_index":379,"title":{},"body":{"miscellaneous/variables.html":{}}}],["primary",{"_index":370,"title":{},"body":{"classes/users1635180753080.html":{}}}],["primarygeneratedcolumn",{"_index":138,"title":{},"body":{"classes/BaseEntity.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":127,"title":{},"body":{"classes/BaseEntity.html":{},"classes/UsersEntity.html":{}}}],["process.env.env",{"_index":402,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env[key",{"_index":410,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":297,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["production.env",{"_index":406,"title":{},"body":{"miscellaneous/variables.html":{}}}],["progressive",{"_index":274,"title":{},"body":{"index.html":{}}}],["project",{"_index":308,"title":{},"body":{"index.html":{}}}],["promise",{"_index":345,"title":{},"body":{"classes/user1635180905186.html":{},"classes/users1635180753080.html":{},"classes/users1635181137582.html":{}}}],["properties",{"_index":109,"title":{},"body":{"classes/BaseEntity.html":{},"classes/LoginDto.html":{},"classes/SignupDto.html":{},"classes/UsersEntity.html":{},"classes/user1635180905186.html":{},"classes/users1635180753080.html":{},"classes/users1635181137582.html":{}}}],["providers",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["public",{"_index":166,"title":{},"body":{"classes/SignupDto.html":{},"classes/user1635180905186.html":{},"classes/users1635180753080.html":{},"classes/users1635181137582.html":{}}}],["queryrunner",{"_index":343,"title":{},"body":{"classes/user1635180905186.html":{},"classes/users1635180753080.html":{},"classes/users1635181137582.html":{}}}],["queryrunner.query",{"_index":349,"title":{},"body":{"classes/user1635180905186.html":{},"classes/users1635180753080.html":{},"classes/users1635181137582.html":{}}}],["queryrunner.query(`alter",{"_index":355,"title":{},"body":{"classes/user1635180905186.html":{},"classes/users1635181137582.html":{}}}],["queryrunner.query(`drop",{"_index":372,"title":{},"body":{"classes/users1635180753080.html":{}}}],["read",{"_index":318,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"classes/SignupDto.html":{}}}],["reflect",{"_index":258,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":205,"title":{},"body":{"classes/UsersRepository.html":{},"index.html":{}}}],["repository/users.repository",{"_index":95,"title":{},"body":{"modules/AuthModule.html":{}}}],["reset",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"classes/LoginDto.html":{},"classes/SignupDto.html":{},"controllers/UsersController.html":{},"classes/UsersEntity.html":{},"modules/UsersModule.html":{},"classes/UsersRepository.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"classes/user1635180905186.html":{},"classes/users1635180753080.html":{},"classes/users1635181137582.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/SignupDto.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/SignupDto.html":{},"injectables/UsersService.html":{},"classes/user1635180905186.html":{},"classes/users1635180753080.html":{},"classes/users1635181137582.html":{}}}],["rimraf",{"_index":261,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":292,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":263,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":279,"title":{},"body":{"index.html":{}}}],["server",{"_index":280,"title":{},"body":{"index.html":{}}}],["side",{"_index":281,"title":{},"body":{"index.html":{}}}],["signup",{"_index":63,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signup(@body",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{}}}],["signup(signupdto",{"_index":73,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signupdto",{"_index":74,"title":{"classes/SignupDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/SignupDto.html":{},"coverage.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"classes/LoginDto.html":{},"classes/SignupDto.html":{},"controllers/UsersController.html":{},"classes/UsersEntity.html":{},"modules/UsersModule.html":{},"classes/UsersRepository.html":{},"injectables/UsersService.html":{},"index.html":{},"classes/user1635180905186.html":{},"classes/users1635180753080.html":{},"classes/users1635181137582.html":{}}}],["sponsors",{"_index":311,"title":{},"body":{"index.html":{}}}],["src/.../app.module.ts",{"_index":375,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../configuration.ts",{"_index":376,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":271,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app.service.ts",{"_index":56,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":57,"title":{},"body":{"injectables/AppService.html":{}}}],["src/config/configuration.ts",{"_index":223,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":226,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/migration",{"_index":399,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/migration/1635180753080",{"_index":229,"title":{},"body":{"coverage.html":{},"classes/users1635180753080.html":{}}}],["src/migration/1635180905186",{"_index":233,"title":{},"body":{"coverage.html":{},"classes/user1635180905186.html":{}}}],["src/migration/1635181137582",{"_index":236,"title":{},"body":{"coverage.html":{},"classes/users1635181137582.html":{}}}],["src/model/base.entity.ts",{"_index":108,"title":{},"body":{"classes/BaseEntity.html":{},"coverage.html":{}}}],["src/model/base.entity.ts:10",{"_index":128,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/model/base.entity.ts:13",{"_index":121,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/model/base.entity.ts:16",{"_index":126,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/model/base.entity.ts:19",{"_index":134,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/model/base.entity.ts:22",{"_index":135,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/model/base.entity.ts:25",{"_index":132,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/model/users.entity",{"_index":103,"title":{},"body":{"injectables/AuthService.html":{},"classes/SignupDto.html":{},"classes/UsersRepository.html":{},"injectables/UsersService.html":{}}}],["src/model/users.entity.ts",{"_index":182,"title":{},"body":{"classes/UsersEntity.html":{},"coverage.html":{}}}],["src/model/users.entity.ts:10",{"_index":185,"title":{},"body":{"classes/UsersEntity.html":{}}}],["src/model/users.entity.ts:13",{"_index":187,"title":{},"body":{"classes/UsersEntity.html":{}}}],["src/model/users.entity.ts:7",{"_index":186,"title":{},"body":{"classes/UsersEntity.html":{}}}],["src/modules/auth/auth.controller.ts",{"_index":61,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/modules/auth/auth.controller.ts:10",{"_index":67,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:15",{"_index":76,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.module.ts",{"_index":92,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/modules/auth/auth.service.ts",{"_index":97,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/modules/auth/auth.service.ts:10",{"_index":101,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:7",{"_index":100,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/dto/login.dto.ts",{"_index":143,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/modules/auth/dto/login.dto.ts:13",{"_index":147,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/modules/auth/dto/login.dto.ts:21",{"_index":153,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/modules/auth/dto/signup.dto.ts",{"_index":164,"title":{},"body":{"classes/SignupDto.html":{},"coverage.html":{}}}],["src/modules/auth/dto/signup.dto.ts:14",{"_index":168,"title":{},"body":{"classes/SignupDto.html":{}}}],["src/modules/auth/dto/signup.dto.ts:22",{"_index":170,"title":{},"body":{"classes/SignupDto.html":{}}}],["src/modules/auth/dto/signup.dto.ts:25",{"_index":169,"title":{},"body":{"classes/SignupDto.html":{}}}],["src/modules/auth/dto/signup.dto.ts:27",{"_index":171,"title":{},"body":{"classes/SignupDto.html":{}}}],["src/modules/users/users.controller.ts",{"_index":181,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/modules/users/users.module.ts",{"_index":201,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/modules/users/users.service.ts",{"_index":208,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/modules/users/users.service.ts:6",{"_index":211,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:9",{"_index":213,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/repository/users.repository",{"_index":104,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["src/repository/users.repository.ts",{"_index":204,"title":{},"body":{"classes/UsersRepository.html":{},"coverage.html":{}}}],["ssl",{"_index":400,"title":{},"body":{"miscellaneous/variables.html":{}}}],["start",{"_index":293,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":296,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":298,"title":{},"body":{"index.html":{}}}],["started",{"_index":273,"title":{"index.html":{}},"body":{}}],["starter",{"_index":286,"title":{},"body":{"index.html":{}}}],["statements",{"_index":218,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":321,"title":{},"body":{"index.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/BaseEntity.html":{},"classes/LoginDto.html":{},"classes/SignupDto.html":{},"classes/UsersEntity.html":{},"classes/user1635180905186.html":{},"classes/users1635180753080.html":{},"classes/users1635181137582.html":{}}}],["support",{"_index":312,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":332,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":265,"title":{},"body":{"dependencies.html":{}}}],["switch",{"_index":403,"title":{},"body":{"miscellaneous/variables.html":{}}}],["synchronize",{"_index":389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["table",{"_index":243,"title":{},"body":{"coverage.html":{},"classes/user1635180905186.html":{},"classes/users1635180753080.html":{},"classes/users1635181137582.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":242,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":301,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["test.env",{"_index":407,"title":{},"body":{"miscellaneous/variables.html":{}}}],["test:covsupport",{"_index":304,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":303,"title":{},"body":{"index.html":{}}}],["tests",{"_index":300,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":310,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.signup(signupdto",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.email",{"_index":177,"title":{},"body":{"classes/SignupDto.html":{}}}],["this.name",{"_index":175,"title":{},"body":{"classes/SignupDto.html":{}}}],["this.password",{"_index":179,"title":{},"body":{"classes/SignupDto.html":{}}}],["this.usersrepository.create(users",{"_index":214,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.insert(signupdto.toentity",{"_index":105,"title":{},"body":{"injectables/AuthService.html":{}}}],["time",{"_index":363,"title":{},"body":{"classes/users1635180753080.html":{}}}],["timestamp",{"_index":362,"title":{},"body":{"classes/users1635180753080.html":{}}}],["timestamptz",{"_index":118,"title":{},"body":{"classes/BaseEntity.html":{},"classes/UsersEntity.html":{}}}],["toentity",{"_index":167,"title":{},"body":{"classes/SignupDto.html":{}}}],["touch",{"_index":322,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":253,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":131,"title":{},"body":{"classes/BaseEntity.html":{},"classes/UsersEntity.html":{},"miscellaneous/variables.html":{}}}],["twitter",{"_index":328,"title":{},"body":{"index.html":{}}}],["type",{"_index":70,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"classes/LoginDto.html":{},"classes/SignupDto.html":{},"classes/UsersEntity.html":{},"injectables/UsersService.html":{},"coverage.html":{},"classes/user1635180905186.html":{},"classes/users1635180753080.html":{},"classes/users1635181137582.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":140,"title":{},"body":{"classes/BaseEntity.html":{},"classes/UsersEntity.html":{},"classes/UsersRepository.html":{},"dependencies.html":{},"classes/user1635180905186.html":{},"classes/users1635180753080.html":{},"classes/users1635181137582.html":{}}}],["typeormmodule",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["typeormmodule.forfeature([usersrepository",{"_index":96,"title":{},"body":{"modules/AuthModule.html":{}}}],["typeormmodule.forroot(config.gettypeormmoduleoptions",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":378,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typescript",{"_index":285,"title":{},"body":{"index.html":{}}}],["ui",{"_index":266,"title":{},"body":{"dependencies.html":{}}}],["undefined",{"_index":120,"title":{},"body":{"classes/BaseEntity.html":{},"classes/UsersEntity.html":{}}}],["unit",{"_index":299,"title":{},"body":{"index.html":{}}}],["up",{"_index":339,"title":{},"body":{"classes/user1635180905186.html":{},"classes/users1635180753080.html":{},"classes/users1635181137582.html":{}}}],["up(queryrunner",{"_index":346,"title":{},"body":{"classes/user1635180905186.html":{},"classes/users1635180753080.html":{},"classes/users1635181137582.html":{}}}],["updated_at",{"_index":114,"title":{},"body":{"classes/BaseEntity.html":{},"classes/UsersEntity.html":{},"classes/users1635180753080.html":{}}}],["updated_by",{"_index":115,"title":{},"body":{"classes/BaseEntity.html":{},"classes/UsersEntity.html":{},"classes/users1635180753080.html":{}}}],["updatedatecolumn",{"_index":139,"title":{},"body":{"classes/BaseEntity.html":{}}}],["updatedatecolumn({type",{"_index":133,"title":{},"body":{"classes/BaseEntity.html":{},"classes/UsersEntity.html":{}}}],["user.ts",{"_index":234,"title":{},"body":{"coverage.html":{},"classes/user1635180905186.html":{}}}],["user.ts:12",{"_index":344,"title":{},"body":{"classes/user1635180905186.html":{}}}],["user.ts:4",{"_index":341,"title":{},"body":{"classes/user1635180905186.html":{}}}],["user.ts:6",{"_index":347,"title":{},"body":{"classes/user1635180905186.html":{}}}],["user1635180905186",{"_index":235,"title":{"classes/user1635180905186.html":{}},"body":{"coverage.html":{},"classes/user1635180905186.html":{}}}],["username",{"_index":352,"title":{},"body":{"classes/user1635180905186.html":{},"classes/users1635181137582.html":{},"miscellaneous/variables.html":{}}}],["users",{"_index":172,"title":{},"body":{"classes/SignupDto.html":{},"classes/UsersEntity.html":{},"injectables/UsersService.html":{},"classes/user1635180905186.html":{},"classes/users1635180753080.html":{},"classes/users1635181137582.html":{}}}],["users.controller",{"_index":202,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.email",{"_index":176,"title":{},"body":{"classes/SignupDto.html":{}}}],["users.name",{"_index":174,"title":{},"body":{"classes/SignupDto.html":{}}}],["users.password",{"_index":178,"title":{},"body":{"classes/SignupDto.html":{}}}],["users.service",{"_index":203,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.ts",{"_index":230,"title":{},"body":{"coverage.html":{},"classes/users1635180753080.html":{},"classes/users1635181137582.html":{}}}],["users.ts:10",{"_index":373,"title":{},"body":{"classes/users1635181137582.html":{}}}],["users.ts:12",{"_index":358,"title":{},"body":{"classes/users1635180753080.html":{}}}],["users.ts:4",{"_index":357,"title":{},"body":{"classes/users1635180753080.html":{},"classes/users1635181137582.html":{}}}],["users.ts:6",{"_index":359,"title":{},"body":{"classes/users1635180753080.html":{},"classes/users1635181137582.html":{}}}],["users1635180753080",{"_index":231,"title":{"classes/users1635180753080.html":{}},"body":{"coverage.html":{},"classes/users1635180753080.html":{}}}],["users1635181137582",{"_index":237,"title":{"classes/users1635181137582.html":{}},"body":{"coverage.html":{},"classes/users1635181137582.html":{}}}],["userscontroller",{"_index":180,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersentity",{"_index":102,"title":{"classes/UsersEntity.html":{}},"body":{"injectables/AuthService.html":{},"classes/SignupDto.html":{},"classes/UsersEntity.html":{},"classes/UsersRepository.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["usersmodule",{"_index":197,"title":{"modules/UsersModule.html":{}},"body":{"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersrepository",{"_index":94,"title":{"classes/UsersRepository.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/UsersRepository.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["usersservice",{"_index":200,"title":{"injectables/UsersService.html":{}},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["uuid",{"_index":360,"title":{},"body":{"classes/users1635180753080.html":{}}}],["uuid_generate_v4",{"_index":361,"title":{},"body":{"classes/users1635180753080.html":{}}}],["validator",{"_index":160,"title":{},"body":{"classes/LoginDto.html":{},"classes/SignupDto.html":{},"dependencies.html":{}}}],["value",{"_index":340,"title":{},"body":{"classes/user1635180905186.html":{},"classes/users1635180753080.html":{},"classes/users1635181137582.html":{},"miscellaneous/variables.html":{}}}],["varchar",{"_index":123,"title":{},"body":{"classes/BaseEntity.html":{},"classes/UsersEntity.html":{}}}],["variable",{"_index":221,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":374,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["varying",{"_index":354,"title":{},"body":{"classes/user1635180905186.html":{},"classes/users1635180753080.html":{},"classes/users1635181137582.html":{}}}],["varying(100",{"_index":367,"title":{},"body":{"classes/users1635180753080.html":{}}}],["varying(300",{"_index":366,"title":{},"body":{"classes/users1635180753080.html":{}}}],["version",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{}}}],["void",{"_index":72,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["watch",{"_index":294,"title":{},"body":{"index.html":{}}}],["weak",{"_index":152,"title":{},"body":{"classes/LoginDto.html":{},"classes/SignupDto.html":{}}}],["website",{"_index":326,"title":{},"body":{"index.html":{}}}],["world",{"_index":59,"title":{},"body":{"injectables/AppService.html":{}}}],["you'd",{"_index":315,"title":{},"body":{"index.html":{}}}],["z",{"_index":150,"title":{},"body":{"classes/LoginDto.html":{},"classes/SignupDto.html":{}}}],["z])(?=.*[a",{"_index":149,"title":{},"body":{"classes/LoginDto.html":{},"classes/SignupDto.html":{}}}],["zone",{"_index":364,"title":{},"body":{"classes/users1635180753080.html":{}}}],["zoom",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { AuthModule } from './modules/auth/auth.module';\nimport Config from './config/configuration';\n\nconst config = Config();\n@Module({\n  imports: [\n    ConfigModule.forRoot({ load: [Config] }),\n    TypeOrmModule.forRoot(config.getTypeOrmModuleOptions()),\n    AuthModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(loginDto: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/login')\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginDto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signup\n                        \n                    \n                \n            \n            \n                \nsignup(signupDto: SignupDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/signup')\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signupDto\n                                    \n                                                SignupDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { LoginDto } from './dto/login.dto';\nimport { SignupDto } from './dto/signup.dto';\n\n@Controller({ version: '1' })\nexport class AuthController {\n  constructor(private authService: AuthService) {}\n  @Post('/login')\n  login(@Body() loginDto: LoginDto) {\n    console.log(loginDto);\n  }\n\n  @Post('/signup')\n  signup(@Body() signupDto: SignupDto) {\n    console.log(signupDto);\n    return this.authService.signup(signupDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService\n\nAuthService\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UsersRepository } from './../../repository/users.repository';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([UsersRepository])],\n  controllers: [AuthController],\n  providers: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: UsersRepository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        UsersRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        signup\n                        \n                    \n                \n            \n            \n                \nsignup(signupDto: SignupDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signupDto\n                                    \n                                                SignupDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { UsersEntity } from 'src/model/users.entity';\nimport { UsersRepository } from 'src/repository/users.repository';\nimport { SignupDto } from './dto/signup.dto';\n\n@Injectable()\nexport class AuthService {\n  constructor(private usersRepository: UsersRepository) {}\n\n  signup(signupDto: SignupDto) {\n    this.usersRepository.insert(signupDto.toEntity());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntity.html":{"url":"classes/BaseEntity.html","title":"class - BaseEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/model/base.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                created_at\n                            \n                            \n                                created_by\n                            \n                            \n                                id\n                            \n                            \n                                internal_comment\n                            \n                            \n                                updated_at\n                            \n                            \n                                updated_by\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamptz', default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/model/base.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        created_by\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 300})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/model/base.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/model/base.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        internal_comment\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 300, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/model/base.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamptz', default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/model/base.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated_by\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 300})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/model/base.entity.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\n\nexport abstract class BaseEntity {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @CreateDateColumn({ type: 'timestamptz', default: () => 'CURRENT_TIMESTAMP' })\n  created_at: Date;\n\n  @Column({ type: 'varchar', length: 300 })\n  created_by: string;\n\n  @UpdateDateColumn({ type: 'timestamptz', default: () => 'CURRENT_TIMESTAMP' })\n  updated_at: Date;\n\n  @Column({ type: 'varchar', length: 300 })\n  updated_by: string;\n\n  @Column({ type: 'varchar', length: 300, nullable: true })\n  internal_comment: string | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/login.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(4)@MaxLength(20)@Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {message: 'password too weak'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/login.dto.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsEmail,\n  IsString,\n  MinLength,\n  Matches,\n  MaxLength,\n  IsNotEmpty,\n} from 'class-validator';\n\nexport class LoginDto {\n  @IsEmail()\n  @IsNotEmpty()\n  email: string;\n\n  @IsString()\n  @MinLength(4)\n  @MaxLength(20)\n  @Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {\n    message: 'password too weak',\n  })\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignupDto.html":{"url":"classes/SignupDto.html","title":"class - SignupDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignupDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/signup.dto.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        Readonly\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                toEntity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/signup.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/signup.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(4)@MaxLength(20)@Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {message: 'password too weak'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/signup.dto.ts:22\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        toEntity\n                        \n                    \n                \n            \n            \n                \n                    \n                    toEntity()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/dto/signup.dto.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsEmail,\n  IsString,\n  MinLength,\n  Matches,\n  MaxLength,\n  IsNotEmpty,\n} from 'class-validator';\nimport { UsersEntity } from 'src/model/users.entity';\n\nexport class SignupDto implements Readonly {\n  @IsEmail()\n  @IsNotEmpty()\n  email: string;\n\n  @IsString()\n  @MinLength(4)\n  @MaxLength(20)\n  @Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {\n    message: 'password too weak',\n  })\n  password: string;\n\n  @IsString()\n  name: string;\n\n  public toEntity() {\n    const users = new UsersEntity();\n    users.name = this.name;\n    users.email = this.email;\n    users.password = this.password;\n    return users;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.controller.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller()\nexport class UsersController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UsersEntity.html":{"url":"classes/UsersEntity.html","title":"class - UsersEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UsersEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/model/users.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                created_at\n                            \n                            \n                                created_by\n                            \n                            \n                                id\n                            \n                            \n                                internal_comment\n                            \n                            \n                                updated_at\n                            \n                            \n                                updated_by\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 100})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/model/users.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 300})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/model/users.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/model/users.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamptz', default: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:13\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        created_by\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 300})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        internal_comment\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 300, nullable: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamptz', default: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated_by\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 300})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:22\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity } from 'typeorm';\nimport { BaseEntity } from './base.entity';\n\n@Entity({ name: 'users' })\nexport class UsersEntity extends BaseEntity {\n  @Column({ type: 'varchar', length: 300 })\n  name: string;\n\n  @Column({ type: 'varchar', length: 100 })\n  email: string;\n\n  @Column({ type: 'varchar' })\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService\n\nUsersService\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersController } from './users.controller';\nimport { UsersService } from './users.service';\n\n@Module({\n  controllers: [UsersController],\n  providers: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UsersRepository.html":{"url":"classes/UsersRepository.html","title":"class - UsersRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UsersRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repository/users.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UsersEntity } from 'src/model/users.entity';\nimport { EntityRepository, Repository } from 'typeorm';\n\n@EntityRepository(UsersEntity)\nexport class UsersRepository extends Repository {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: UsersRepository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/users/users.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        UsersRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(users: UsersEntity)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/users.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    users\n                                    \n                                                UsersEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { UsersEntity } from 'src/model/users.entity';\nimport { UsersRepository } from 'src/repository/users.repository';\n\n@Injectable()\nexport class UsersService {\n  constructor(private usersRepository: UsersRepository) {}\n\n  async create(users: UsersEntity) {\n    this.usersRepository.create(users);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/config/configuration.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/configuration.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/configuration.ts\n            \n            variable\n            getEnvValue\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/migration/1635180753080-users.ts\n            \n            class\n            users1635180753080\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/migration/1635180905186-user.ts\n            \n            class\n            user1635180905186\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/migration/1635181137582-users.ts\n            \n            class\n            users1635181137582\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/model/base.entity.ts\n            \n            class\n            BaseEntity\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/model/users.entity.ts\n            \n            class\n            UsersEntity\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/signup.dto.ts\n            \n            class\n            SignupDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/repository/users.repository.ts\n            \n            class\n            UsersRepository\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/config : ^1.0.2\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/swagger : ^5.1.4\n        \n            @nestjs/typeorm : ^8.0.2\n        \n            class-transformer : ^0.4.0\n        \n            class-validator : ^0.13.1\n        \n            pg : ^8.7.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.1.6\n        \n            typeorm : ^0.2.38\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nUsersService\n\nUsersService\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    8 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/user1635180905186.html":{"url":"classes/user1635180905186.html","title":"class - user1635180905186","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  user1635180905186\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migration/1635180905186-user.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user1635180905186'\n                    \n                \n                    \n                        \n                                Defined in src/migration/1635180905186-user.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migration/1635180905186-user.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migration/1635180905186-user.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class user1635180905186 implements MigrationInterface {\n  name = 'user1635180905186';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      `ALTER TABLE \"users\" ADD \"username\" character varying NOT NULL`,\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"users\" DROP COLUMN \"username\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/users1635180753080.html":{"url":"classes/users1635180753080.html","title":"class - users1635180753080","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  users1635180753080\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migration/1635180753080-users.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'users1635180753080'\n                    \n                \n                    \n                        \n                                Defined in src/migration/1635180753080-users.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migration/1635180753080-users.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migration/1635180753080-users.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class users1635180753080 implements MigrationInterface {\n  name = 'users1635180753080';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      `CREATE TABLE \"users\" (\"id\" uuid NOT NULL DEFAULT uuid_generate_v4(), \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), \"created_by\" character varying(300) NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), \"updated_by\" character varying(300) NOT NULL, \"internal_comment\" character varying(300), \"name\" character varying(300) NOT NULL, \"email\" character varying(100) NOT NULL, \"password\" character varying NOT NULL, CONSTRAINT \"PK_a3ffb1c0c8416b9fc6f907b7433\" PRIMARY KEY (\"id\"))`,\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`DROP TABLE \"users\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/users1635181137582.html":{"url":"classes/users1635181137582.html","title":"class - users1635181137582","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  users1635181137582\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migration/1635181137582-users.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'users1635181137582'\n                    \n                \n                    \n                        \n                                Defined in src/migration/1635181137582-users.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migration/1635181137582-users.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migration/1635181137582-users.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class users1635181137582 implements MigrationInterface {\n  name = 'users1635181137582';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"users\" DROP COLUMN \"username\"`);\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      `ALTER TABLE \"users\" ADD \"username\" character varying NOT NULL`,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            config   (src/.../app.module.ts)\n                        \n                        \n                            config   (src/.../configuration.ts)\n                        \n                        \n                            environment   (src/.../configuration.ts)\n                        \n                        \n                            getEnvValue   (src/.../configuration.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Config()\n                    \n                \n\n\n        \n    \n\n    src/config/configuration.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => ({\n  getTypeOrmModuleOptions: (): TypeOrmModuleOptions => {\n    return {\n      type: 'postgres',\n\n      host: getEnvValue('POSTGRES_HOST'),\n      port: parseInt(getEnvValue('POSTGRES_PORT')),\n      username: getEnvValue('POSTGRES_USER'),\n      password: getEnvValue('POSTGRES_PASSWORD'),\n      database: getEnvValue('POSTGRES_DATABASE'),\n      autoLoadEntities: true,\n      synchronize: true,\n\n      entities: [join(`${__dirname}/../model/`, '**', '*.entity.{ts,js}')],\n\n      migrationsTableName: 'migration',\n\n      migrations: [join(`${__dirname}/src/migration/*.ts`)],\n\n      cli: {\n        migrationsDir: 'src/migration',\n      },\n\n      ssl: getEnvValue('POSTGRES_DATABASE') === 'production',\n    };\n  },\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  const env = process.env.env;\n  switch (env) {\n    case 'development':\n      return '.development.env';\n    case 'production':\n      return '.production.env';\n    case 'test':\n      return '.test.env';\n    case 'local':\n      return '.local.env';\n  }\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEnvValue\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (key) => {\n  return process.env[key];\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
